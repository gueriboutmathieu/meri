from meri.repositories.statement_repository import StatementRepository as StatementRepository
from meri.services.embedding_service import EmbeddingService as EmbeddingService
from meri.services.llm_service import LlmService as LlmService
from meri.services.transcription_service import TranscriptionService as TranscriptionService
from typing import Protocol

class CommandContext(Protocol):
    @property
    def embedding_service(self) -> EmbeddingService: ...
    @property
    def llm_service(self) -> LlmService: ...
    @property
    def statement_repository(self) -> StatementRepository: ...
    @property
    def transcription_service(self) -> TranscriptionService: ...
    def commit(self) -> None: ...
    def rollback(self) -> None: ...

def make_context(embedding_service: EmbeddingService, llm_service: LlmService, statement_repository: StatementRepository, transcription_service: TranscriptionService) -> CommandContext: ...
